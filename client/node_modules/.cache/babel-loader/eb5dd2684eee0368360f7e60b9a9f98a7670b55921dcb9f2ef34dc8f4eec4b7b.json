{"ast":null,"code":"var _jsxFileName = \"/Users/robertlee/Desktop/test11/client/src/components/Task/CreateTaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { CREATE_TASK } from '../../graphql/mutations';\nimport { getToken } from '../../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateTaskForm = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const {\n    token,\n    userId\n  } = getToken();\n  const [createTask, {\n    loading,\n    error\n  }] = useMutation(CREATE_TASK);\n  const [successMessage, setSuccessMessage] = useState('');\n  const handleCreateTask = async e => {\n    e.preventDefault();\n    try {\n      const {\n        data\n      } = await createTask({\n        variables: {\n          input: {\n            title,\n            description,\n            userId: userId\n          }\n        }\n      });\n      setSuccessMessage('Task created successfully!');\n\n      //     setTitle('');\n      //     setDescription('');\n      //     window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"Add new task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateTask,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Creating Task...' : 'Create Task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateTaskForm, \"oIIUxeL8fF0V4gEtfirLUc0GJ78=\", false, function () {\n  return [useMutation];\n});\n_c = CreateTaskForm;\nexport default CreateTaskForm;\nvar _c;\n$RefreshReg$(_c, \"CreateTaskForm\");","map":{"version":3,"names":["React","useState","useMutation","CREATE_TASK","getToken","jsxDEV","_jsxDEV","CreateTaskForm","_s","title","setTitle","description","setDescription","token","userId","createTask","loading","error","successMessage","setSuccessMessage","handleCreateTask","e","preventDefault","data","variables","input","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","disabled","message","_c","$RefreshReg$"],"sources":["/Users/robertlee/Desktop/test11/client/src/components/Task/CreateTaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { CREATE_TASK } from '../../graphql/mutations';\r\nimport { getToken } from '../../utils/auth';\r\n\r\n\r\nconst CreateTaskForm = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const { token, userId } = getToken();\r\n  const [createTask, { loading, error }] = useMutation(CREATE_TASK);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  const handleCreateTask = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const { data } = await createTask({\r\n        variables: { input: { title, description, userId: userId, } },\r\n      });\r\n\r\n      setSuccessMessage('Task created successfully!');\r\n\r\n\r\n //     setTitle('');\r\n //     setDescription('');\r\n //     window.location.reload();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div><h2 className='title'>Add new task</h2>\r\n    <form onSubmit={handleCreateTask}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Description\"\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n      />\r\n      <button type=\"submit\" disabled={loading}>\r\n        {loading ? 'Creating Task...' : 'Create Task'}\r\n      </button>\r\n      {error && <p>{error.message}</p>}\r\n      {successMessage && <p>{successMessage}</p>}\r\n    </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTaskForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}