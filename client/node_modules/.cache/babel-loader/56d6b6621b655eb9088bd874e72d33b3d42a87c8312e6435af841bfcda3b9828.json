{"ast":null,"code":"var _jsxFileName = \"/Users/robertlee/Desktop/test11/client/src/components/Task/TaskList.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_TASKS_BY_USER_ID } from '../../graphql/queries';\nimport { DELETE_TASK } from '../../graphql/mutations';\nimport { getToken } from '../../utils/auth';\nimport { Link } from 'react-router-dom';\nimport './TaskList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const {\n    token,\n    userId\n  } = getToken();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TASKS_BY_USER_ID, {\n    variables: {\n      userId\n    },\n    fetchPolicy: 'network-only'\n  });\n  const [deleteTask] = useMutation(DELETE_TASK);\n  const handleDeleteTask = async taskId => {\n    try {\n      await deleteTask({\n        variables: {\n          id: taskId\n        },\n        refetchQueries: [{\n          query: GET_TASKS_BY_USER_ID,\n          variables: {\n            userId\n          }\n        }]\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading tasks...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error fetching tasks: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 21\n  }, this);\n  const {\n    tasksByUserId\n  } = data;\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"title\",\n    children: [\"  \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: tasksByUserId.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `task-card ${task.completed ? 'completed' : 'incomplete'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), task.completed ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"task-status completed\",\n          children: \"Task Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"task-status incomplete\",\n          children: \"Task Incomplete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-actions\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/tasks/${task.id}`,\n            className: \"btn btn-primary\",\n            children: \"Update Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => handleDeleteTask(task.id),\n            children: \"Delete Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n};\n_s(TaskList, \"OlXRnM3i9BJ2aR7PMsMXlgtnpgs=\", false, function () {\n  return [useQuery, useMutation];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useQuery","useMutation","GET_TASKS_BY_USER_ID","DELETE_TASK","getToken","Link","jsxDEV","_jsxDEV","TaskList","_s","token","userId","loading","error","data","variables","fetchPolicy","deleteTask","handleDeleteTask","taskId","id","refetchQueries","query","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","message","tasksByUserId","class","className","map","task","completed","title","description","to","onClick","_c","$RefreshReg$"],"sources":["/Users/robertlee/Desktop/test11/client/src/components/Task/TaskList.js"],"sourcesContent":["import React from 'react';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { GET_TASKS_BY_USER_ID } from '../../graphql/queries';\r\nimport { DELETE_TASK } from '../../graphql/mutations';\r\nimport { getToken } from '../../utils/auth';\r\nimport { Link } from 'react-router-dom';\r\nimport './TaskList.css'; \r\n\r\nconst TaskList = () => {\r\n  const { token, userId } = getToken();\r\n  const { loading, error, data } = useQuery(GET_TASKS_BY_USER_ID, {\r\n    variables: { userId },\r\n    fetchPolicy: 'network-only',\r\n  });\r\n\r\n  const [deleteTask] = useMutation(DELETE_TASK);\r\n\r\n  const handleDeleteTask = async (taskId) => {\r\n    try {\r\n      await deleteTask({\r\n        variables: { id: taskId },\r\n        refetchQueries: [{ query: GET_TASKS_BY_USER_ID, variables: { userId } }],\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading tasks...</p>;\r\n  if (error) return <p>Error fetching tasks: {error.message}</p>;\r\n\r\n  const { tasksByUserId } = data;\r\n  console.log(data);\r\n\r\n  return (\r\n  <div class=\"title\">  <h2>Task List</h2>\r\n<div className=\"task-list\">\r\n\r\n      {tasksByUserId.map((task) => (\r\n        <div className={`task-card ${task.completed ? 'completed' : 'incomplete'}`} key={task.id}>\r\n          <h3>{task.title}</h3>\r\n          <p>{task.description}</p>\r\n          {task.completed ? (\r\n            <p className=\"task-status completed\">Task Completed</p>\r\n          ) : (\r\n            <p className=\"task-status incomplete\">Task Incomplete</p>\r\n          )}\r\n          <div className=\"task-actions\">\r\n            <Link to={`/tasks/${task.id}`} className=\"btn btn-primary\">\r\n              Update Task\r\n            </Link>\r\n            <button\r\n              className=\"btn btn-danger\"\r\n              onClick={() => handleDeleteTask(task.id)}\r\n            >\r\n              Delete Task\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n</div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}