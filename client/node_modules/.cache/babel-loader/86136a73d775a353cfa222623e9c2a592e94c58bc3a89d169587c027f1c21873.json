{"ast":null,"code":"var _jsxFileName = \"/Users/robertlee/Desktop/test11/client/src/components/Task/UpdateTaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { UPDATE_TASK } from '../../graphql/mutations';\nimport { GET_TASK } from '../../graphql/queries';\nimport { useParams } from 'react-router-dom';\nimport { getToken } from '../../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateTaskForm = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [completed, setCompleted] = useState(false);\n  const [updateTask, {\n    loading,\n    error\n  }] = useMutation(UPDATE_TASK);\n  const [successMessage, setSuccessMessage] = useState('');\n  const {\n    loading: queryLoading,\n    error: queryError,\n    data: queryData\n  } = useQuery(GET_TASK, {\n    variables: {\n      id\n    }\n  });\n  useEffect(() => {\n    if (queryData && queryData.task) {\n      const {\n        task\n      } = queryData;\n      setTitle(task.title);\n      setDescription(task.description);\n      setCompleted(task.completed);\n    }\n  }, [queryData]);\n  const handleUpdateTask = async e => {\n    e.preventDefault();\n    const {\n      token,\n      userId\n    } = getToken();\n    try {\n      const {\n        data\n      } = await updateTask({\n        variables: {\n          id,\n          input: {\n            title,\n            description,\n            completed,\n            userId\n          }\n        }\n      });\n      setSuccessMessage('Task updated successfully!');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  if (queryLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading task...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 28\n  }, this);\n  if (queryError) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error fetching task: \", queryError.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      class: \"title\",\n      children: \"Update Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpdateTask,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: completed,\n          onChange: e => setCompleted(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), \"Completed\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Updating Task...' : 'Update Task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: successMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateTaskForm, \"GtFdRdCN/DheWZAnZTCuUK7ya/A=\", false, function () {\n  return [useParams, useMutation, useQuery];\n});\n_c = UpdateTaskForm;\nexport default UpdateTaskForm;\nvar _c;\n$RefreshReg$(_c, \"UpdateTaskForm\");","map":{"version":3,"names":["React","useState","useEffect","useMutation","useQuery","UPDATE_TASK","GET_TASK","useParams","getToken","jsxDEV","_jsxDEV","UpdateTaskForm","_s","id","title","setTitle","description","setDescription","completed","setCompleted","updateTask","loading","error","successMessage","setSuccessMessage","queryLoading","queryError","data","queryData","variables","task","handleUpdateTask","e","preventDefault","token","userId","input","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","message","class","onSubmit","type","placeholder","value","onChange","target","checked","disabled","_c","$RefreshReg$"],"sources":["/Users/robertlee/Desktop/test11/client/src/components/Task/UpdateTaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport { UPDATE_TASK } from '../../graphql/mutations';\r\nimport { GET_TASK } from '../../graphql/queries';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getToken } from '../../utils/auth';\r\n\r\nconst UpdateTaskForm = () => {\r\n  const { id } = useParams();\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [completed, setCompleted] = useState(false);\r\n  const [updateTask, { loading, error }] = useMutation(UPDATE_TASK);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  const { loading: queryLoading, error: queryError, data: queryData } = useQuery(GET_TASK, {\r\n    variables: { id },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (queryData && queryData.task) {\r\n      const { task } = queryData;\r\n      setTitle(task.title);\r\n      setDescription(task.description);\r\n      setCompleted(task.completed);\r\n    }\r\n  }, [queryData]);\r\n\r\n  const handleUpdateTask = async (e) => {\r\n    e.preventDefault();\r\n    const { token, userId } = getToken();\r\n    try {\r\n      const { data } = await updateTask({\r\n        variables: { id, input: { title, description, completed,userId } },\r\n      });\r\n\r\n    \r\n      setSuccessMessage('Task updated successfully!');\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  if (queryLoading) return <p>Loading task...</p>;\r\n  if (queryError) return <p>Error fetching task: {queryError.message}</p>;\r\n\r\n  return (\r\n    <div><h2 class=\"title\">Update Task</h2>\r\n    <form onSubmit={handleUpdateTask}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Description\"\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n      />\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={completed}\r\n          onChange={(e) => setCompleted(e.target.checked)}\r\n        />\r\n        Completed\r\n      </label>\r\n      <button type=\"submit\" disabled={loading}>\r\n        {loading ? 'Updating Task...' : 'Update Task'}\r\n      </button>\r\n      {error && <p>{error.message}</p>}\r\n      {successMessage && <p>{successMessage}</p>}\r\n    </form>\r\n</div>\r\n  );\r\n};\r\n\r\nexport default UpdateTaskForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}